public enum HydraStableswapMath {
    public static func calculateOutGivenIn<GenericIntoRustString: IntoRustString>(_ reserves: GenericIntoRustString, _ asset_in: UInt32, _ asset_out: UInt32, _ amount_in: GenericIntoRustString, _ amplification: GenericIntoRustString, _ fee: GenericIntoRustString) -> RustString {
        RustString(ptr: __swift_bridge__$calculate_out_given_in({ let rustString = reserves.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), asset_in, asset_out, { let rustString = amount_in.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = amplification.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = fee.intoRustString(); rustString.isOwned = false; return rustString.ptr }()))
    }
    public static func calculateInGivenOut<GenericIntoRustString: IntoRustString>(_ reserves: GenericIntoRustString, _ asset_in: UInt32, _ asset_out: UInt32, _ amount_out: GenericIntoRustString, _ amplification: GenericIntoRustString, _ fee: GenericIntoRustString) -> RustString {
        RustString(ptr: __swift_bridge__$calculate_in_given_out({ let rustString = reserves.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), asset_in, asset_out, { let rustString = amount_out.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = amplification.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = fee.intoRustString(); rustString.isOwned = false; return rustString.ptr }()))
    }
    public static func calculateAmplification<GenericIntoRustString: IntoRustString>(_ initial_amplification: GenericIntoRustString, _ final_amplification: GenericIntoRustString, _ initial_block: GenericIntoRustString, _ final_block: GenericIntoRustString, _ current_block: GenericIntoRustString) -> RustString {
        RustString(ptr: __swift_bridge__$calculate_amplification({ let rustString = initial_amplification.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = final_amplification.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = initial_block.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = final_block.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = current_block.intoRustString(); rustString.isOwned = false; return rustString.ptr }()))
    }
    public static func calculateShares<GenericIntoRustString: IntoRustString>(_ reserves: GenericIntoRustString, _ assets: GenericIntoRustString, _ amplification: GenericIntoRustString, _ share_issuance: GenericIntoRustString, _ fee: GenericIntoRustString) -> RustString {
        RustString(ptr: __swift_bridge__$calculate_shares({ let rustString = reserves.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = assets.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = amplification.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = share_issuance.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = fee.intoRustString(); rustString.isOwned = false; return rustString.ptr }()))
    }
    public static func calculateSharesForAmount<GenericIntoRustString: IntoRustString>(_ reserves: GenericIntoRustString, _ asset_in: UInt32, _ amount: GenericIntoRustString, _ amplification: GenericIntoRustString, _ share_issuance: GenericIntoRustString, _ fee: GenericIntoRustString) -> RustString {
        RustString(ptr: __swift_bridge__$calculate_shares_for_amount({ let rustString = reserves.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), asset_in, { let rustString = amount.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = amplification.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = share_issuance.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = fee.intoRustString(); rustString.isOwned = false; return rustString.ptr }()))
    }
    public static func calculateAddOneAsset<GenericIntoRustString: IntoRustString>(_ reserves: GenericIntoRustString, _ shares: GenericIntoRustString, _ asset_in: UInt32, _ amplification: GenericIntoRustString, _ share_issuance: GenericIntoRustString, _ fee: GenericIntoRustString) -> RustString {
        RustString(ptr: __swift_bridge__$calculate_add_one_asset({ let rustString = reserves.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = shares.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), asset_in, { let rustString = amplification.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = share_issuance.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = fee.intoRustString(); rustString.isOwned = false; return rustString.ptr }()))
    }
    public static func calculateLiquidityOutOneAsset<GenericIntoRustString: IntoRustString>(_ reserves: GenericIntoRustString, _ shares: GenericIntoRustString, _ asset_out: UInt32, _ amplification: GenericIntoRustString, _ share_issuance: GenericIntoRustString, _ withdraw_fee: GenericIntoRustString) -> RustString {
        RustString(ptr: __swift_bridge__$calculate_liquidity_out_one_asset({ let rustString = reserves.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = shares.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), asset_out, { let rustString = amplification.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = share_issuance.intoRustString(); rustString.isOwned = false; return rustString.ptr }(), { let rustString = withdraw_fee.intoRustString(); rustString.isOwned = false; return rustString.ptr }()))
    }
}
